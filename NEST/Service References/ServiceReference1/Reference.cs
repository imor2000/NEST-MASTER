//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NEST.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ngpsoftware.com/ngpapi/WebService", ConfigurationName="ServiceReference1.ApiServiceSoap")]
    public interface ApiServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ngpsoftware.com/ngpapi/WebService/DontWorry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DontWorry();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ngpsoftware.com/ngpapi/WebService/DontWorry", ReplyAction="*")]
        System.IAsyncResult BeginDontWorry(System.AsyncCallback callback, object asyncState);
        
        string EndDontWorry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ngpsoftware.com/ngpapi/WebService/processRequestWithCreds", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode processRequestWithCreds(string RequestXML, string transType, string credentialString);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://ngpsoftware.com/ngpapi/WebService/processRequestWithCreds", ReplyAction="*")]
        System.IAsyncResult BeginprocessRequestWithCreds(string RequestXML, string transType, string credentialString, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndprocessRequestWithCreds(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ApiServiceSoapChannel : NEST.ServiceReference1.ApiServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DontWorryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DontWorryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class processRequestWithCredsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public processRequestWithCredsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApiServiceSoapClient : System.ServiceModel.ClientBase<NEST.ServiceReference1.ApiServiceSoap>, NEST.ServiceReference1.ApiServiceSoap {
        
        private BeginOperationDelegate onBeginDontWorryDelegate;
        
        private EndOperationDelegate onEndDontWorryDelegate;
        
        private System.Threading.SendOrPostCallback onDontWorryCompletedDelegate;
        
        private BeginOperationDelegate onBeginprocessRequestWithCredsDelegate;
        
        private EndOperationDelegate onEndprocessRequestWithCredsDelegate;
        
        private System.Threading.SendOrPostCallback onprocessRequestWithCredsCompletedDelegate;
        
        public ApiServiceSoapClient() {
        }
        
        public ApiServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApiServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApiServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApiServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<DontWorryCompletedEventArgs> DontWorryCompleted;
        
        public event System.EventHandler<processRequestWithCredsCompletedEventArgs> processRequestWithCredsCompleted;
        
        public string DontWorry() {
            return base.Channel.DontWorry();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDontWorry(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDontWorry(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndDontWorry(System.IAsyncResult result) {
            return base.Channel.EndDontWorry(result);
        }
        
        private System.IAsyncResult OnBeginDontWorry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDontWorry(callback, asyncState);
        }
        
        private object[] OnEndDontWorry(System.IAsyncResult result) {
            string retVal = this.EndDontWorry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDontWorryCompleted(object state) {
            if ((this.DontWorryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DontWorryCompleted(this, new DontWorryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DontWorryAsync() {
            this.DontWorryAsync(null);
        }
        
        public void DontWorryAsync(object userState) {
            if ((this.onBeginDontWorryDelegate == null)) {
                this.onBeginDontWorryDelegate = new BeginOperationDelegate(this.OnBeginDontWorry);
            }
            if ((this.onEndDontWorryDelegate == null)) {
                this.onEndDontWorryDelegate = new EndOperationDelegate(this.OnEndDontWorry);
            }
            if ((this.onDontWorryCompletedDelegate == null)) {
                this.onDontWorryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDontWorryCompleted);
            }
            base.InvokeAsync(this.onBeginDontWorryDelegate, null, this.onEndDontWorryDelegate, this.onDontWorryCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode processRequestWithCreds(string RequestXML, string transType, string credentialString) {
            return base.Channel.processRequestWithCreds(RequestXML, transType, credentialString);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginprocessRequestWithCreds(string RequestXML, string transType, string credentialString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginprocessRequestWithCreds(RequestXML, transType, credentialString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndprocessRequestWithCreds(System.IAsyncResult result) {
            return base.Channel.EndprocessRequestWithCreds(result);
        }
        
        private System.IAsyncResult OnBeginprocessRequestWithCreds(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string RequestXML = ((string)(inValues[0]));
            string transType = ((string)(inValues[1]));
            string credentialString = ((string)(inValues[2]));
            return this.BeginprocessRequestWithCreds(RequestXML, transType, credentialString, callback, asyncState);
        }
        
        private object[] OnEndprocessRequestWithCreds(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndprocessRequestWithCreds(result);
            return new object[] {
                    retVal};
        }
        
        private void OnprocessRequestWithCredsCompleted(object state) {
            if ((this.processRequestWithCredsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.processRequestWithCredsCompleted(this, new processRequestWithCredsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void processRequestWithCredsAsync(string RequestXML, string transType, string credentialString) {
            this.processRequestWithCredsAsync(RequestXML, transType, credentialString, null);
        }
        
        public void processRequestWithCredsAsync(string RequestXML, string transType, string credentialString, object userState) {
            if ((this.onBeginprocessRequestWithCredsDelegate == null)) {
                this.onBeginprocessRequestWithCredsDelegate = new BeginOperationDelegate(this.OnBeginprocessRequestWithCreds);
            }
            if ((this.onEndprocessRequestWithCredsDelegate == null)) {
                this.onEndprocessRequestWithCredsDelegate = new EndOperationDelegate(this.OnEndprocessRequestWithCreds);
            }
            if ((this.onprocessRequestWithCredsCompletedDelegate == null)) {
                this.onprocessRequestWithCredsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnprocessRequestWithCredsCompleted);
            }
            base.InvokeAsync(this.onBeginprocessRequestWithCredsDelegate, new object[] {
                        RequestXML,
                        transType,
                        credentialString}, this.onEndprocessRequestWithCredsDelegate, this.onprocessRequestWithCredsCompletedDelegate, userState);
        }
    }
}
